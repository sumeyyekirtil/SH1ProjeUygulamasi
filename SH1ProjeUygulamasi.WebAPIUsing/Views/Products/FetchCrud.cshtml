@*
    
*@
@{
    ViewData["Title"] = "Js ile Ürün Yönetimi";
}

<h1>@ViewBag.Title</h1>
<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>

<table class="table table-striped table-hover">
    <tr>
        <th>Id</th>
        <th>Kategori</th>
        <th>Marka</th>
        <th>Ürün Resmi</th>
        <th>Ürün Adı</th>
        <th>Fiyat</th>
        <th>Stok</th>
        <th>Eklenme Tarihi</th>
        <th>isActive</th>
        <th></th>
    </tr>
    <tbody id="products"></tbody>  @*tablonun gölgesi anlamına gelir*@
</table>

<input type="hidden" name="Id" />
<input type="hidden" name="CreateDate" />
<input type="hidden" name="ImageName" />


<div class="modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Ürün Bilgileri</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Modal body text goes here.</p>
            </div>
            
        </div>
    </div>
</div>

<div class="modal-footer">

    <button type="button" class="btn btn-primary">Vazgeç</button>
</div>

@section scripts{
    <script>
        var apiUrl = "http://localhost:5036/Api/";
        function GetAll() {
            fetch(apiUrl + 'Products')
                .then(response => response.json()) //json olarak dönüştür
                .then(data => {
                    let rows = '';
                    data.forEach(product => {
                        rows += `<tr>
                                    <td>${product.id}</td>
                                    <td>${product.categoryName}</td>
                                    <td>${product.brandName}</td>
                                    <td><img src="http://localhost:5036/Images/${product.imageName}"  height="34" /></td>
                                    <td>${product.name}</td>
                                    <td>${product.price}</td>
                                    <td>${product.stok}</td>
                                    <td>${product.createDate}</td>
                                    <td>${product.isActive}</td>
                                    <td>${new Date(product.createDate).toLocaleDateString()}</td>
                                    <td>
                                        <button class="btn btn-sm btn-primary" onclick="Edit(${product.id})">Düzenle</button>
                                        <button class="btn btn-sm btn-danger" onclick="Delete(${product.id})">Sil</button>
                                    </td>
                                 </tr>`;
                    });
                    document.getElementById('products').innerHTML = rows;
                })
                .catch(error => console.error('Hata:', error));
        }
        window.onload = GetAll;

        //kategoriler
        function GetCategories() {
            fetch(apiUrl + 'Categories')
                .then(response => response.json()) //json olarak dönüştür
                .then(data => {
                    let liste = document.getElementById("CategoryId");
                    data.forEach(item => {
                        let option = new Option(item.name, item.id);
                        liste.add(option);
                    });
                })
                .catch(error => console.error('Hata:', error));
        }
        window.onload = GetCategories;

        function GetBrands() {
            fetch(apiUrl + 'brands')
                .then(response => response.json()) //json olarak dönüştür
                .then(data => {
                    let liste = document.getElementById("BrandId");
                    data.forEach(item => {
                        let option = new Option(item.name, item.id);
                        liste.add(option);
                    });
                })
                .catch(error => console.error('Hata:', error));
        }
        window.onload = GetBrands;

        function Ekle() {
            //file upload işlemi
            const formData = new FormData();
            const fileField = document.querySelector('input[type="file"]');

            formData.append("formFile", fileField.files[0]);
            fetch(apiUrl + 'Brands/', {
                method:'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({
                    Name: document.getElementById('Name')[0].value,
                    Description: document.getElementsByName('Description')[0].value,
                    Logo: formData.get('formFile').name //getElementById ile yazmanın başka yolu
                })
            })
                .then((response) => {
                    if (response.ok {
                        //upload(formData);
                        location.reload()
                        //return response.json(); //başarılı ise json verisini alın
                    }
                    else{
                        throw new Error('İstek başarısız oldu.'); //hata durumunda hata fırlatın
                    }
                })
                catch(error => {
                    console.log(error)
                })
        }


    </script>
}